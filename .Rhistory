library(lattice)
a <- rnorm(100)
b <- rnorm(100)
xyplot(a,b)
?xyplot
xyplot (a ~ b)
class(xyplot a ~ b)
class(xyplot (a ~ b))
library(nlme)
xyplot (weight ~ time | diet, BodyWeight)
xyplot (weight ~ time | Diet, BodyWeight)
xyplot (weight ~ Time | Diet, BodyWeight)
?annotate
??annotate
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print p
p
data(airquality)
qplot(Wind, Ozone, data = airquality)
library(ggplot2)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
?geom
??geom
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
class(xyplot (a ~ b))
qplot(votes, rating, data = movies) + geom_smooth()
?lpoints
?points
?lines
?text
?lpoints
?poionts
?points
install.package("knitr")
install.packages("knirt")
install.package("knitr")
install.packages("knitr")
require(knitr)
========================================================
library(ggplot2)
library(plyr)
load("deaths.rdata")
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color= drve)
qplot(displ, hwy, data = mpg, color= drv)
qplot(displ, hwy, data = mpg, color= drv, size = cyl)
qplot(displ, hwy, data = mpg, color= drv)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
install.packages("Statistical Inference")
library(swirl)
install.packages("swirl")
library(swirl)
install.packages("Statistical Inference")
install_from_swirl("Statistical Inference")
swirl()
library(swirl)
swirl()
1/2*1.6*.8
64%
.64
mypdf
integrate(mypdf, 0, 1.6)
sqrt(2)
exit
quit()
getwd()
setwd("H:/Learning Work Area/R Learning/Coursera_JohnHopkins_DataScience/")
list.files()
setwd("H:/Learning Work Area/R Learning/Coursera_JohnHopkins_DataScience/5. Reproducible Research")
list.files()
setwd("H:/Learning Work Area/R Learning/Coursera_JohnHopkins_DataScience/5. Reproducible Research/RepData_PeerAssessment1")
list.files()
a <- read.csv("activity.csv")
head(a)
?sapply
sapply(a, FUN(x) = sum(steps))
sapply(a, sum(steps))
a
str(a)
lapply(a,FUN = sum(steps~date))
x <- list(a = 1:10, beta = exp(-3))
x <- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE, FALSE, FALSE, TRUE))
lapply(x)
lapply(x, mean)
lapply(a, mean)
lapply(a, mean, na.rm = TRUE)
library(dplyr)
b <- tbl_df(a)
b
a %>% group_by(date) %>% summarise(totSteps = sum(steps))) %>% print
a %>% group_by(date) %>% summarise(totSteps = sum(steps)) %>% print
tot_steps <- a %>%
a %>%
group_by(date) %>%
summarise(totSteps = sum(steps)) %>%
print
a %>%
group_by(date) %>%
summarise(totSteps = sum(steps)) %>%
print
totSteps <- a %>%
group_by(date) %>%
summarise(sum(steps))
totSteps
hist(totSteps)
totSteps
head(totSteps)
totSteps <- a %>%
group_by(date) %>%
summarise(tot=sum(steps))
totSteps
head(totSteps)
hist(totSteps$to)
?barplot
rm(a)
a <- read.csv("activity.csv", headers = T)
a <- read.csv("activity.csv", header = T)
a$interval <- factor(a$interval)
a$interval
a$date <- as.Date(a$date, format = "%Y-%m-%d")
a
head(a)
tail(a)
head(a, 100)
summary(a)
str(a)
steps_per_day <- aggregate(steps ~ date, a, sum)
colnames(steps_per_day) <- c("date", "steps")
steps_per_day
ggplot(steps_per_day, aes(steps) ) + geom_histogram()
library(ggplot2)
ggplot(steps_per_day, aes(steps) ) + geom_histogram()
ggplot(steps_per_day, aes(x=steps)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean_steps, y=0, color="green"), size=4, shape=15) +
geom_point(aes(x=median_steps, y=0, color="yellow"), size=4, shape=15) +
scale_color_manual(name=element_blank(), labels=col_labels, values=cols) +
labs(title="Histogram of Steps Taken per Day", x="Number of Steps", y="Count") +
theme_bw() + theme(legend.position = "bottom")
ggplot(steps_per_day, aes(x=steps)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean_steps, y=0, color="green"), size=4, shape=15) +
geom_point(aes(x=median_steps, y=0, color="yellow"), size=4, shape=15)
mean_steps <- mean(steps_per_day$steps)
median_steps <- median(steps_per_day$steps)
mean_steps
calc_steps_per_day <- function(a) {
steps_per_day <- aggregate(steps ~ date, a, sum)
colnames(steps_per_day) <- c("date", "steps")
steps_per_day
}
plot_steps_per_day <- function(steps_per_day, mean_steps, median_steps) {
col_labels=c(paste("Mean:", mean_steps), paste("Median:", median_steps))
cols = c("green", "yellow")
ggplot(steps_per_day, aes(x=steps)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean_steps, y=0, color="green"), size=4, shape=15) +
geom_point(aes(x=median_steps, y=0, color="yellow"), size=4, shape=15) +
scale_color_manual(name=element_blank(), labels=col_labels, values=cols) +
labs(title="Histogram of Steps Taken per Day", x="Number of Steps", y="Count") +
theme_bw() + theme(legend.position = "bottom")
}
steps_per_day <- calc_steps_per_day(a)
mean_steps = round(mean(steps_per_day$steps), 2)
median_steps = round(median(steps_per_day$steps), 2)
plot_steps_per_day(steps_per_day, mean_steps, median_steps)
hist(a)
hist(a$steps)
head(a)
hist(totSteps$tot)
hist(totSteps$tot, bin = 1500)
hist(totSteps$tot, binwidth = 1500)
?hist
hist(totSteps$tot, breaks = 1500)
a <- read.csv("activity.csv")
a <- tbl_df(a)
totSteps <- a %>% group_by_days %>% summarise(Steps = sum(steps))
a %>% group_by_days %>% summarise(Steps = sum(steps))
a %>% group_by_days %>% summarise(sum(steps))
totSteps <- a %>% group_by(days) %>% summarise(Steps = sum(steps))
totSteps <- a %>% group_by(date) %>% summarise(Steps = sum(steps))
totSteps
hist(totSteps$Steps)
hist(totSteps$Steps, breaks = 1000)
hist(totSteps$Steps, breaks = 5000)
hist(totSteps$Steps)
aggregate(steps~date, a, sum)
totSteps <- a %>% group_by(date) %>% summarise(Steps = sum(steps))
totSteps
!is.na(totSteps$Steps)
complete.cases(totSteps)
totSteps[!is.na(totSteps)]
totSteps[!is.na(totSteps$Steps)]
totSteps[!is.na(totSteps$steps)]
totSteps[!is.na(totSteps$Steps)]
totSteps
totsteps[,tot$Steps != NA]
totSteps[,totSteps$Steps != NA]
?aggregate
sapply(a, sum)
lapply(a, sum)
lapply(a, sum(Steps))
aggregate(steps ~ date, a, sum)
aggregate(steps ~ date, a, sum)
daily_steps <- aggregate(steps ~ date, a, sum)
mean_daily_steps <- mean(daily_steps)
mean_daily_steps <- mean(daily_steps$steps)
mean_daily_steps
median_daily_steps <- median(daily_steps$steps)
median_daily_steps
b <- tbl_df(a)
dly_steps <- b %>% group_by(date) %>% summarise(tot = sum(steps))
dly_steps
mean(dly_steps)
mean(dly_steps, na.rm = T)
mean(dly_steps$steps, na.rm = T)
dly_steps$steps
dly_steps
head(dly_steps)
mean(dly_steps$tot)
mean(dly_steps$tot, na.rm = T)
median(dly_steps$tot, na.rm = T)
source('~/.active-rstudio-document', echo=TRUE)
totSteps <- a %>%
group_by(date) %>%
summarise(tot = sum(steps))
totSteps
mean_steps <- mean(totSteps$tot)
mean_steps
totSteps
ggplot(totSteps)
rm(dly_steps)
daily_steps
rm(daily_steps)
rm(mean_steps)
ggplot(totSteps, aes(tot))
ggplot(totSteps, aes(tot)) + geom_histogram(fill = "steelblue", binwidth = 1500)
ggplot(totSteps, aes(tot)) +
geom_histogram(fill = "steelblue", binwidth = 1500)
+geom_point(aes(x = mean_steps, y = 0, color = "green"), size = 4, shape = 15)
ggplot(totSteps, aes(tot)) +
geom_histogram(fill = "steelblue", binwidth = 1500)
ggplot(totSteps, aes(tot)) +
geom_histogram(fill = "steelblue", binwidth = 1500)
+geom_point(aes(x = mean_steps, y = 0, color = "green"), size = 4, shape = 15)
ggplot(totSteps, aes(tot)) +
geom_histogram(fill = "steelblue", binwidth = 1500) +
geom_point(aes(x = mean_steps, y = 0, color = "green")
ggplot(totSteps, aes(tot)) +
geom_histogram(fill = "steelblue", binwidth = 1500) +
geom_point(aes(x = mean_steps, y = 0, color = "green"))
ggplot(totSteps, aes(x=tot)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean_steps, y=0, color="green"), size=4, shape=15)
mean_steps <- round(mean(totSteps$tot, na.rm = TRUE),0)
median_steps <- round(median(totSteps$tot, na.rm = TRUE),0)
ggplot(totSteps, aes(x=tot)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean_steps, y=0, color="green"), size=4, shape=15)
ggplot(totSteps, aes(x=tot)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean_steps, y=0, color="green"), size=4, shape=15) +        geom_point(aes(x=median_steps, y=0, color="yellow"), size=4, shape=15) +
)
ggplot(totSteps, aes(x=tot)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean_steps, y=0, color="green"), size=4, shape=15) +        geom_point(aes(x=median_steps, y=0, color="yellow"), size=4, shape=15)
ggplot(totSteps, aes(tot)) +
geom_histogram(fill = "steelblue", binwidth = 1500) +
geom_point(aes(x = mean_steps, y = 0, color = "green")), size = 4, shape = 15) +
geom_point(aes(x=median_steps, y=0, color="yellow"), size=4, shape=15)
totSteps
head(totSteps)
ggplot(totSteps, aes(x=tot)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean_steps, y=0, color="green"), size=4, shape=15)
ggplot(totSteps, aes(x=tot)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean_steps, y=0, color="green"), size=4, shape=15) + geom_point(aes(x=median_steps, y=0, color="yellow"), size=4, shape=15)
ggplot(totSteps, aes(x=tot)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean_steps, y=0, color="green"), size=4, shape=15) +
geom_point(aes(x=median_steps, y=0, color="yellow"), size=4, shape=15) +
labs(title="Histogram of Steps Taken per Day", x="Number of Steps", y="Count") + theme_bw() + theme(legend.position = "bottom")
list.files()
source('~/.active-rstudio-document', echo=TRUE)
dbinom(x = 4, size = 20, prob = 1/6)
pbinon(q = 4, size = 20, prob = 1/6)
pbinom(q = 4, size = 20, prob = 1/6)
qbinom(p = 0.75, size = 20, prob = 1/6)
rbinom(100, 20, 1/6)
dnorm(x = 1, mean = 1, sd = 0.1)
a <- dnorm(x = 1, mean = 1, sd = 0.1)
plot(a)
plot(dnorm(x = 1, mean = 1))
normal.a <- rnorm(1000, mean = 0, sd = 1)
normal.a
hist(normal.a)
normal.b <- rnorm(1000)
normal.c <- rnorm(1000)
chi.sq.3 <-(normal.a) ^2 + (normal.b)^2 + (normal.c)^2
chi.sq.3
hist(chi.sq.3)
scaled.chi.sq.3 <- ch.sq.3 /3
chi.sq.3
scaled.chi.sq.3 <- chi.sq.3 /3
normal.d <- rnorm(1000)
t.3 <- normal.d /sqrt(scaled.chi.sq.3)
t.3
hist(t.3)
normal.a <- rnrom(1000)
normal.a <- rnorm(1000)
hist(normal.a)
normal.b <- rnorm(1000)
normal.c <- rnorm(1000)
normal.d <- rnorm(1000)
chi.sq.3 <- (normal.a)^2 + (normal.b)^2 +  (normal.c)^2
str(chi.sq.3)
hist(chi.sq.3)
?freedom
??freedom
list.files()
x <- rnorm(1000, mean = 100, sd = 15)
x
hist(x)
mean(x)
sd(x)
x <- rnorm(100, mean = 100, sd = 15)
mean(x)
sd(x)
qnorm(p = c(.025, .975))
install.packages("lsr")
library(lsr)
afl124.Rdata
library(sciplot)
install.packages("sciplot")
install.packages("gplots")
library(sciplot)
library(gplots)
library(lsr )
list.files()
binom.test(62, 100, p = .5)
